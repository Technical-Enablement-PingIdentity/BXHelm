bxhealthapp:
  enabled: false
  name: bxhealthapp
  image:
    repository: pingidentity
    name: pingtoolkit
    tag: "2108"
  envs:
    SERVER_PROFILE_URL: ""
    STARTUP_COMMAND: "tail"
    STARTUP_BACKGROUND_OPTS: "-f /dev/null"
  ingress:
    host: bxhealth.ping-devops.com
  container:
    resources:
      requests:
        cpu: 0
        memory: 1Gi
      limits:
        cpu: 1500m
        memory: 1Gi

ping-devops:
  global: 
    ingress:
      enabled: false
      addReleaseNameToHost: append
      defaultDomain: ping-devops.com
      defaultTlsSecret:
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        kubernetes.io/ingress.class: "nginx-public"

  pingaccess-admin:
    enabled: true
    privateCert:
      generate: true
    workload:
      type: Deployment
      deployment:
        strategy:
          type: Recreate
    container:
      waitFor:
        pingfederate-engine:
          service: https
          timeoutSeconds: 600
      resources:
        requests:
          cpu: 0
          memory: 1Gi
        limits:
          cpu: 1500m
          memory: 1Gi
    envs:
      SERVER_PROFILE_URL: https://github.com/Technical-Enablement-PingIdentity/BXHealth-ServerProfiles
      SERVER_PROFILE_PATH: profiles/pingaccess
    services:
      http:
        servicePort: 8080
        containerPort: 8080
        ingressPort: 80
        dataService: true

  pingaccess-engine:
    enabled: true
    workload:
      type: Deployment
      deployment:
        strategy:
          type: Recreate
    container:
      replicaCount: 1
      resources:
        requests:
          cpu: 0
          memory: 1Gi
        limits:
          cpu: 1500m
          memory: 1Gi
    envs:
      SERVER_PROFILE_URL: https://github.com/Technical-Enablement-PingIdentity/BXHealth-ServerProfiles
      SERVER_PROFILE_PATH: profiles/pingaccess

  pingfederate-admin:
    enabled: true
    container:
      waitFor:
        pingdirectory:
          service: ldaps
          timeoutSeconds: 300
      resources:
        requests:
          cpu: 0
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi
    envs:
      SERVER_PROFILE_URL: https://github.com/Technical-Enablement-PingIdentity/BXHealth-ServerProfiles
      SERVER_PROFILE_PATH: profiles/pingfederate
  
  pingfederate-engine:
    enabled: true
    container:
      resources:
        requests:
          cpu: 0
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi
    envs:
      SERVER_PROFILE_URL: https://github.com/Technical-Enablement-PingIdentity/BXHealth-ServerProfiles
      SERVER_PROFILE_PATH: profiles/pingfederate

  pingdirectory:
    enabled: true
    container:
      replicaCount: 1
      resources:
        requests:
          cpu: 50m
          memory: 3Gi
        limits:
          cpu: 2
          memory: 3Gi
    envs:
      SERVER_PROFILE_URL: https://github.com/Technical-Enablement-PingIdentity/BXHealth-ServerProfiles
      SERVER_PROFILE_PATH: profiles/pingdirectory
      MAX_HEAP_SIZE: 2458m
      ROOT_USER_PASSWORD_FILE: /opt/staging/pwd
      ADMIN_USER_PASSWORD_FILE: /opt/staging/pwd
      ENCRYPTION_PASSWORD_FILE: /opt/staging/pwd
    services:
      ldap:
        servicePort: 389
        containerPort: 1389
        dataService: true
      ldaps:
        servicePort: 636
        containerPort: 1636
        dataService: true
        clusterService: true
      https:
        servicePort: 443
        containerPort: 1443
        ingressPort: 443
        dataService: true
  
  pingdataconsole:
    enabled: true
    #TODO: GDO-1020
    envs:
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
      SERVER_PROFILE_PATH: baseline/pingdataconsole
      SERVER_PROFILE_BRANCH: master
  
  pingauthorize:
    enabled: true
    envs:
      SERVER_PROFILE_URL: https://github.com/Technical-Enablement-PingIdentity/BXHealth-ServerProfiles
      SERVER_PROFILE_PATH: profiles/pingauthorize
      ROOT_USER_PASSWORD_FILE: /opt/staging/pwd
      ADMIN_USER_PASSWORD_FILE: /opt/staging/pwd
      ENCRYPTION_PASSWORD_FILE: /opt/staging/pwd

  pingauthorizepap:
    enabled: true
    envs:
      SERVER_PROFILE_URL: https://github.com/Technical-Enablement-PingIdentity/BXHealth-ServerProfiles
      SERVER_PROFILE_PATH: profiles/pingauthorizepap

## copied from pingidentity/ping-devops 0.7.6
global:
  annotations: {}

  envs: {}

  addReleaseNameToResource: prepend

  ingress:
    enabled: false
    addReleaseNameToHost: subdomain
    defaultDomain: example.com
    defaultTlsSecret:
    annotations: {}

  privateCert:
    generate: false
    additionalHosts: []
    additionalIPs: []

  vault:
    enabled: false
    hashicorp:
      annotations:
        agent-inject: true
        agent-init-first: true
        agent-pre-populate-only: true
        log-level: info
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
        serviceAccountName: vault-auth

  image:
    repository: pingidentity
    name:
    tag: "2108"
    pullPolicy: IfNotPresent

  externalImage:
    pingtoolkit:
      image: pingidentity/pingtoolkit:2108
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 1m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 9031
        runAsGroup: 9999

  services: {}


  workload:
    type: Deployment

    annotations: {}

    schedulerName: default-scheduler

    deployment:
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0

    statefulSet:
      partition: 0

      persistentvolume:
        enabled: true
        volumes:
          out-dir:
            mountPath: /opt/out
            persistentVolumeClaim:
              accessModes:
              - ReadWriteOnce
              storageClassName:
              resources:
                requests:
                  storage: 4Gi

    securityContext:
      fsGroup: 9999
      runAsUser: 9031
      runAsGroup: 9999

  container:
    replicaCount: 1

    resources:
      requests:
        cpu: 0
        memory: 0
      limits:
        cpu: 0
        memory: 0
    nodeSelector: {}
    tolerations: []
    affinity: {}
    terminationGracePeriodSeconds: 30

    envFrom: []

    lifecycle: {}

    probes:
      livenessProbe:
        exec:
          command:
            - /opt/liveness.sh
        initialDelaySeconds: 30
        periodSeconds: 30
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 4
      readinessProbe:
        exec:
          command:
            - /opt/readiness.sh
        initialDelaySeconds: 30
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 4
      startupProbe:
        exec:
          command:
            - /opt/liveness.sh
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 90

  license:
    secret:
      devOps: devops-secret

  includeSidecars: []
  includeInitContainers: []
  includeVolumes: []